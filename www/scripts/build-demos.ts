import { existsSync, promises as fs } from "node:fs";
import path from "node:path";
import { rimraf } from "rimraf";

async function buildDemos() {
  const targetPath = path.join(process.cwd(), "src/components");

  let index = `// This file is autogenerated by scripts/build-internal-registry.ts
  // Do not edit this file directly.
  import * as React from "react"
  
  export const Index: Record<
    string,
    {
      files: string[];
      component: React.LazyExoticComponent<React.ComponentType<object>>;
    }
  > = {
  `;

  const sourcePath = path.join(process.cwd(), "src/modules/docs/demos");
  const folders = await fs.readdir(sourcePath);
  for (const folder of folders) {
    const folderPath = path.join(sourcePath, folder);
    // replace tsx with empty string
    const primitiveName = folder.replace(".tsx", "");
    const demos = await fs.readdir(folderPath);
    for (const demo of demos) {
      const demoName = `${primitiveName}/${demo.replace(".tsx", "")}`;
      const demoPath = `@/modules/docs/demos/${primitiveName}/${demo.replace(".tsx", "")}`;
      index += `
      "${demoName}": {
        files: ["modules/docs/demos/${primitiveName}/${demo}"],
        component: React.lazy(() => import("${demoPath}")),
      },`;
    }
  }

  index += `
}
`;
  await rimraf(path.join(targetPath, "__demos__.tsx"));
  await fs.writeFile(path.join(targetPath, "__demos__.tsx"), index, "utf8");
}

async function run() {
  try {
    await buildDemos();
    console.log("âœ… Built demos!");
  } catch (error) {
    console.error(error);
    process.exit(1);
  }
}

run();