{
  "name": "date-range-picker",
  "registryDependencies": [
    "button",
    "calendar",
    "field",
    "input",
    "date-input",
    "dialog"
  ],
  "files": [
    {
      "type": "core",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { CalendarIcon } from \"lucide-react\";\nimport {\n  DateRangePicker as AriaDateRangePicker,\n  type DateRangePickerProps as AriaDateRangePickerProps,\n  type DateValue,\n} from \"react-aria-components\";\nimport { tv, type VariantProps } from \"tailwind-variants\";\nimport { Button } from \"@/registry/core/button_basic\";\nimport { RangeCalendar } from \"@/registry/core/calendar_basic\";\nimport { DateInput, DateSegment } from \"@/registry/core/date-input_basic\";\nimport { Dialog } from \"@/registry/core/dialog_basic\";\nimport { Label, HelpText, type FieldProps } from \"@/registry/core/field_basic\";\nimport { InputRoot, type inputStyles } from \"@/registry/core/input_basic\";\n\nconst dateRangePickerStyles = tv({\n  base: \"flex w-48 flex-col items-start gap-2\",\n});\n\ninterface DateRangePickerProps<T extends DateValue>\n  extends DateRangePickerRootProps<T>,\n    Omit<FieldProps, \"children\">,\n    VariantProps<typeof inputStyles> {\n  prefix?: React.ReactNode;\n  isLoading?: boolean;\n}\n\nconst DateRangePicker = <T extends DateValue>({\n  className,\n  size,\n  label,\n  description,\n  errorMessage,\n  prefix,\n  isLoading,\n  isRequired,\n  isDisabled,\n  ...props\n}: DateRangePickerProps<T>) => {\n  return (\n    <DateRangePickerRoot\n      className={className}\n      isRequired={isRequired}\n      isDisabled={isLoading || isDisabled}\n      {...props}\n    >\n      {label && <Label>{label}</Label>}\n      <InputRoot size={size} prefix={prefix} className=\"pr-1\">\n        <DateInput slot=\"start\">\n          {(segment) => <DateSegment segment={segment} />}\n        </DateInput>\n        <span aria-hidden=\"true\">â€“</span>\n        <DateInput slot=\"end\" className=\"flex-1\">\n          {(segment) => <DateSegment segment={segment} />}\n        </DateInput>\n        <Button\n          variant=\"default\"\n          size=\"sm\"\n          shape=\"square\"\n          className=\"my-1 size-7 rounded-sm\"\n        >\n          <CalendarIcon />\n        </Button>\n      </InputRoot>\n      <HelpText description={description} errorMessage={errorMessage} />\n      <Dialog type=\"popover\" mobileType=\"drawer\" className=\"flex\">\n        <RangeCalendar className=\"mx-auto\" />\n      </Dialog>\n    </DateRangePickerRoot>\n  );\n};\n\ninterface DateRangePickerRootProps<T extends DateValue>\n  extends Omit<AriaDateRangePickerProps<T>, \"className\"> {\n  className?: string;\n}\nconst DateRangePickerRoot = <T extends DateValue>({\n  className,\n  ...props\n}: DateRangePickerRootProps<T>) => {\n  return (\n    <AriaDateRangePicker\n      className={dateRangePickerStyles({ className })}\n      {...props}\n    />\n  );\n};\n\nexport type { DateRangePickerProps, DateRangePickerRootProps };\nexport { DateRangePicker, DateRangePickerRoot };\n",
      "path": "core/date-range-picker.tsx"
    }
  ]
}