{
  "name": "text-area",
  "type": "registry:core",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "field",
    "input",
    "text-field"
  ],
  "files": [
    {
      "path": "core/text-area/text-area.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { type VariantProps } from \"tailwind-variants\";\nimport { Field, type FieldProps } from \"@/registry/ui/default/core/field\";\nimport {\n  InputRoot,\n  TextAreaInput,\n  type inputStyles,\n} from \"@/registry/ui/default/core/input\";\nimport {\n  TextFieldRoot,\n  type TextFieldRootProps,\n} from \"@/registry/ui/default/core/text-field\";\n\ntype TextAreaProps = TextFieldRootProps &\n  Omit<FieldProps, \"children\"> &\n  Omit<VariantProps<typeof inputStyles>, \"size\"> & {\n    prefix?: React.ReactNode;\n    suffix?: React.ReactNode;\n    isLoading?: boolean;\n    loaderPosition?: \"prefix\" | \"suffix\";\n    placeholder?: string;\n  };\nconst TextArea = React.forwardRef<HTMLTextAreaElement, TextAreaProps>(\n  (\n    {\n      className,\n      placeholder,\n      label,\n      description,\n      errorMessage,\n      prefix,\n      suffix,\n      isLoading,\n      loaderPosition = \"suffix\",\n      isRequired,\n      necessityIndicator,\n      contextualHelp,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <TextFieldRoot className={className} {...props}>\n        <Field\n          label={label}\n          description={description}\n          errorMessage={errorMessage}\n          isRequired={isRequired}\n          necessityIndicator={necessityIndicator}\n          contextualHelp={contextualHelp}\n        >\n          <InputRoot\n            prefix={prefix}\n            suffix={suffix}\n            isLoading={isLoading}\n            loaderPosition={loaderPosition}\n            multiline\n          >\n            <TextAreaInput ref={ref} placeholder={placeholder} />\n          </InputRoot>\n        </Field>\n      </TextFieldRoot>\n    );\n  }\n);\nTextArea.displayName = \"TextArea\";\n\nexport type { TextAreaProps };\nexport { TextArea };\n",
      "type": "registry:core",
      "target": "core/text-area.tsx"
    }
  ]
}