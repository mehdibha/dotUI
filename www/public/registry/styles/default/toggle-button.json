{
  "name": "toggle-button",
  "type": "registry:core",
  "dependencies": ["react-aria-components"],
  "files": [
    {
      "path": "core/toggle-button/toggle-button.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  composeRenderProps,\n  ToggleButton as AriaToggleButton,\n  type ToggleButtonProps as AriaToggleButtonProps,\n} from \"react-aria-components\";\nimport { tv, type VariantProps } from \"tailwind-variants\";\nimport { focusRing } from \"@/registry/ui/default/lib/focus-styles\";\n\nconst toggleButtonStyles = tv({\n  extend: focusRing,\n  base: \"inline-flex items-center justify-center gap-2 rounded-md leading-normal text-sm font-medium ring-offset-background transition-colors disabled:cursor-default disabled:bg-bg-disabled disabled:text-fg-disabled\",\n  variants: {\n    variant: {\n      quiet:\n        \"bg-transparent hover:bg-bg-inverse/10 pressed:bg-bg-inverse/20 text-fg selected:bg-bg-primary selected:text-fg-onPrimary selected:hover:bg-bg-primary-hover selected:pressed:bg-bg-primary-active\",\n      outline:\n        \"border border-border-field bg-transparent hover:bg-bg-inverse/10 pressed:bg-bg-inverse/20 pressed:border-transparent text-fg selected:bg-bg-primary selected:border-transparent selected:text-fg-onPrimary selected:hover:bg-bg-primary-hover selected:pressed:bg-bg-primary-active\",\n      accent:\n        \"border border-border-field bg-transparent hover:bg-bg-inverse/10 pressed:bg-bg-inverse/20 pressed:border-transparent text-fg selected:bg-bg-accent selected:border-transparent selected:hover:bg-bg-accent-hover selected:pressed:bg-bg-accent-active selected:text-fg-onAccent\",\n    },\n    size: {\n      sm: \"size-8 [&_svg]:size-4\",\n      md: \"size-9 [&_svg]:size-4\",\n      lg: \"size-10 [&_svg]:size-5\",\n    },\n    shape: {\n      rectangle: \"\",\n      square: \"\",\n      circle: \"rounded-full\",\n    },\n  },\n  compoundVariants: [\n    {\n      size: \"sm\",\n      shape: \"rectangle\",\n      className: \"px-3 w-auto\",\n    },\n    {\n      size: \"md\",\n      shape: \"rectangle\",\n      className: \"px-4 w-auto\",\n    },\n    {\n      size: \"lg\",\n      shape: \"rectangle\",\n      className: \"px-5 w-auto\",\n    },\n  ],\n  defaultVariants: {\n    variant: \"quiet\",\n    size: \"md\",\n    shape: \"square\",\n  },\n});\n\ninterface ToggleButtonProps\n  extends Omit<AriaToggleButtonProps, \"className\">,\n    VariantProps<typeof toggleButtonStyles> {\n  className?: string;\n  prefix?: React.ReactNode;\n  suffix?: React.ReactNode;\n}\n\nconst ToggleButton = React.forwardRef(\n  (\n    localProps: ToggleButtonProps,\n    ref: React.ForwardedRef<HTMLButtonElement>\n  ) => {\n    const contextProps = useToggleButtonContext();\n    const props = { ...contextProps, ...localProps };\n    const { className, variant, size, shape, prefix, suffix, ...restProps } =\n      props;\n    return (\n      <AriaToggleButton\n        ref={ref}\n        {...restProps}\n        className={toggleButtonStyles({\n          variant,\n          size,\n          shape,\n          className,\n        })}\n      >\n        {composeRenderProps(props.children, (children) => (\n          <>\n            {prefix}\n            {typeof children === \"string\" ? (\n              <span className=\"truncate\">{children}</span>\n            ) : (\n              children\n            )}\n            {suffix}\n          </>\n        ))}\n      </AriaToggleButton>\n    );\n  }\n);\nToggleButton.displayName = \"ToggleButton\";\n\ntype ToggleButtonContextValue = VariantProps<typeof toggleButtonStyles>;\nconst ToggleButtonContext = React.createContext<ToggleButtonContextValue>({});\nconst useToggleButtonContext = () => {\n  return React.useContext(ToggleButtonContext);\n};\n\nexport type { ToggleButtonProps };\nexport { ToggleButton, toggleButtonStyles, ToggleButtonContext };\n",
      "type": "registry:core",
      "target": "core/toggle-button.tsx"
    }
  ]
}
