{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "search-field",
  "type": "registry:ui",
  "registryDependencies": [
    "http://localhost:3000/r/retro/field.json",
    "http://localhost:3000/r/retro/button.json"
  ],
  "files": [
    {
      "path": "src/registry/retro/ui/search-field.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { SearchIcon, XIcon } from \"lucide-react\";\nimport {\n  SearchField as AriaSearchField,\n  composeRenderProps,\n} from \"react-aria-components\";\nimport { tv } from \"tailwind-variants\";\nimport { Button } from \"@/modules/registry/ui/button.basic\";\nimport {\n  Label,\n  HelpText,\n  type FieldProps,\n} from \"@/modules/registry/ui/field.basic\";\nimport {\n  InputRoot,\n  Input,\n  type InputRootProps,\n} from \"@/modules/registry/ui/input.basic\";\n\nconst searchFieldtyles = tv({\n  base: \"group flex w-48 flex-col items-start gap-2 empty:[&_button[slot='clear']]:hidden [&_input]:[&::-webkit-search-cancel-button]:appearance-none [&_input]:[&::-webkit-search-decoration]:appearance-none\",\n});\n\ninterface SearchFieldProps\n  extends SearchFieldRootProps,\n    Pick<InputRootProps, \"size\">,\n    FieldProps {}\n\nconst SearchField = ({\n  label,\n  description,\n  errorMessage,\n  size,\n  ...props\n}: SearchFieldProps) => {\n  return (\n    <SearchFieldRoot {...props}>\n      {label && <Label>{label}</Label>}\n      <InputRoot size={size}>\n        <SearchIcon />\n        <Input />\n        <Button\n          slot=\"clear\"\n          variant=\"quiet\"\n          size=\"sm\"\n          shape=\"circle\"\n          className=\"size-6\"\n        >\n          <XIcon />\n        </Button>\n      </InputRoot>\n      <HelpText description={description} errorMessage={errorMessage} />\n    </SearchFieldRoot>\n  );\n};\n\ninterface SearchFieldRootProps\n  extends React.ComponentProps<typeof AriaSearchField> {\n  placeholder?: string;\n}\nconst SearchFieldRoot = ({ className, ...props }: SearchFieldRootProps) => {\n  return (\n    <AriaSearchField\n      className={composeRenderProps(className, (className) =>\n        searchFieldtyles({ className })\n      )}\n      {...props}\n    />\n  );\n};\n\nexport type { SearchFieldProps, SearchFieldRootProps };\nexport { SearchField, SearchFieldRoot };\n",
      "type": "registry:ui"
    }
  ]
}