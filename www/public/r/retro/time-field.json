{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "time-field",
  "type": "registry:ui",
  "registryDependencies": [
    "http://localhost:3000/r/retro/field.json",
    "http://localhost:3000/r/retro/input.json",
    "http://localhost:3000/r/retro/date-input.json"
  ],
  "files": [
    {
      "path": "src/registry/retro/ui/time-field.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  TimeField as AriaTimeField,\n  composeRenderProps,\n  type TimeValue,\n  type TimeFieldProps as AriaTimeFieldProps,\n} from \"react-aria-components\";\nimport { tv } from \"tailwind-variants\";\nimport { DateInput, DateSegment } from \"@/modules/registry/ui/date-input.basic\";\nimport {\n  HelpText,\n  Label,\n  type FieldProps,\n} from \"@/modules/registry/ui/field.basic\";\nimport {\n  InputRoot,\n  type InputRootProps,\n} from \"@/modules/registry/ui/input.basic\";\n\nconst timeFieldStyles = tv({\n  base: \"flex w-32 flex-col items-start gap-2\",\n});\n\ninterface TimeFieldProps<T extends TimeValue>\n  extends TimeFieldRootProps<T>,\n    Pick<InputRootProps, \"size\" | \"prefix\" | \"suffix\">,\n    FieldProps {}\n\nconst TimeField = <T extends TimeValue>({\n  label,\n  description,\n  errorMessage,\n  prefix,\n  suffix,\n  size,\n  ...props\n}: TimeFieldProps<T>) => {\n  return (\n    <TimeFieldRoot {...props}>\n      {label && <Label>{label}</Label>}\n      <InputRoot size={size} prefix={prefix} suffix={suffix}>\n        <DateInput>{(segment) => <DateSegment segment={segment} />}</DateInput>\n      </InputRoot>\n      <HelpText description={description} errorMessage={errorMessage} />\n    </TimeFieldRoot>\n  );\n};\n\ninterface TimeFieldRootProps<T extends TimeValue>\n  extends AriaTimeFieldProps<T> {\n  ref?: React.RefObject<HTMLDivElement>;\n}\nconst TimeFieldRoot = <T extends TimeValue>({\n  className,\n  ...props\n}: TimeFieldRootProps<T>) => {\n  return (\n    <AriaTimeField\n      className={composeRenderProps(className, (className) =>\n        timeFieldStyles({ className })\n      )}\n      {...props}\n    />\n  );\n};\n\ninterface TimeFieldInputProps extends InputRootProps {}\nconst TimeFieldInput = (props: TimeFieldInputProps) => {\n  return (\n    <InputRoot {...props}>\n      <DateInput>{(segment) => <DateSegment segment={segment} />}</DateInput>\n    </InputRoot>\n  );\n};\n\nexport type { TimeFieldProps, TimeFieldRootProps, TimeFieldInputProps };\nexport { TimeField, TimeFieldRoot, TimeFieldInput };\n",
      "type": "registry:ui"
    }
  ]
}