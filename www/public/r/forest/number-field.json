{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "number-field",
  "type": "registry:ui",
  "registryDependencies": [
    "http://localhost:3000/r/forest/input.json",
    "http://localhost:3000/r/forest/field.json",
    "http://localhost:3000/r/forest/use-is-mobile.json"
  ],
  "files": [
    {
      "path": "src/registry/forest/ui/number-field.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  ChevronDownIcon,\n  ChevronUpIcon,\n  MinusIcon,\n  PlusIcon,\n} from \"lucide-react\";\nimport {\n  NumberField as AriaNumberField,\n  composeRenderProps,\n} from \"react-aria-components\";\nimport { tv } from \"tailwind-variants\";\nimport { useIsMobile } from \"@/registry/forest/hooks/use-is-mobile\";\nimport { Button } from \"@/registry/forest/ui/button\";\nimport { Label, HelpText, type FieldProps } from \"@/registry/forest/ui/field\";\nimport { InputRoot, Input, type InputRootProps } from \"@/registry/forest/ui/input\";\n\n// TODO: update registry\n\nconst numberFieldStyles = tv({\n  slots: {\n    root: \"flex w-48 flex-col items-start gap-2\",\n    inputRoot: \"grid gap-0 px-0\",\n    input: \"px-2 [grid-area:field]\",\n    increment: \"w-8 p-0 [grid-area:increment]\",\n    decrement: \"w-8 p-0 [grid-area:decrement]\",\n  },\n  variants: {\n    isMobile: {\n      true: {\n        inputRoot:\n          \"grid-cols-[auto_1fr_auto] [grid-template-areas:'decrement_field_increment']\",\n        increment: \"h-full rounded-none rounded-r-md border-l\",\n        decrement: \"h-full rounded-none rounded-l-md border-r\",\n      },\n      false: {\n        inputRoot:\n          \"grid-cols-[1fr_auto] [grid-template-areas:'field_increment''field_decrement']\",\n        increment: \"h-auto shrink rounded-none rounded-tr-md border-b border-l\",\n        decrement: \"h-auto shrink rounded-none rounded-br-md border-l\",\n      },\n    },\n  },\n});\n\nconst { root, inputRoot, input, increment, decrement } = numberFieldStyles();\n\ninterface NumberFieldProps\n  extends NumberFieldRootProps,\n    Pick<InputRootProps, \"size\">,\n    FieldProps {}\n\nconst NumberField = ({\n  label,\n  description,\n  errorMessage,\n  size,\n  ...props\n}: NumberFieldProps) => {\n  const isMobile = useIsMobile();\n\n  return (\n    <NumberFieldRoot {...props}>\n      {label && <Label>{label}</Label>}\n      <InputRoot size={size} className={inputRoot({ isMobile })}>\n        <Button slot=\"decrement\" className={decrement({ isMobile })}>\n          {isMobile ? <MinusIcon /> : <ChevronDownIcon />}\n        </Button>\n        <Input className={input()} />\n        <Button slot=\"increment\" className={increment({ isMobile })}>\n          {isMobile ? <PlusIcon /> : <ChevronUpIcon />}\n        </Button>\n      </InputRoot>\n      <HelpText description={description} errorMessage={errorMessage} />\n    </NumberFieldRoot>\n  );\n};\n\ninterface NumberFieldRootProps\n  extends React.ComponentProps<typeof AriaNumberField> {\n  placeholder?: string;\n}\nconst NumberFieldRoot = ({ className, ...props }: NumberFieldRootProps) => {\n  return (\n    <AriaNumberField\n      className={composeRenderProps(className, (className) =>\n        root({ className })\n      )}\n      {...props}\n    />\n  );\n};\n\nexport type { NumberFieldProps, NumberFieldRootProps };\nexport { NumberField, NumberFieldRoot };\n",
      "type": "registry:ui"
    }
  ]
}