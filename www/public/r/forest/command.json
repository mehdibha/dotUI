{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "command",
  "type": "registry:ui",
  "files": [
    {
      "path": "src/registry/forest/ui/command.tsx",
      "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { Autocomplete as AriaAutocomplete } from \"react-aria-components\";\r\nimport { tv } from \"tailwind-variants\";\r\n\r\nconst commandStyles = tv({\r\n  slots: {\r\n    root: \"flex flex-col\",\r\n  },\r\n  variants: {\r\n    standalone: {\r\n      true: {\r\n        root: \"\",\r\n      },\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    standalone: true,\r\n  },\r\n});\r\n\r\nconst { root } = commandStyles();\r\n\r\ninterface CommandProps extends CommandRootProps {}\r\nconst Command = (props: CommandProps) => {\r\n  return <CommandRoot {...props} />;\r\n};\r\n\r\ninterface CommandRootProps\r\n  extends React.ComponentProps<typeof AriaAutocomplete>,\r\n    Omit<React.ComponentProps<\"div\">, \"children\" | \"slot\"> {}\r\nconst CommandRoot = ({\r\n  filter,\r\n  defaultInputValue,\r\n  inputValue,\r\n  onInputChange,\r\n  slot,\r\n  className,\r\n  ...props\r\n}: CommandProps) => {\r\n  return (\r\n    <AriaAutocomplete\r\n      filter={filter}\r\n      defaultInputValue={defaultInputValue}\r\n      inputValue={inputValue}\r\n      onInputChange={onInputChange}\r\n      slot={slot}\r\n    >\r\n      <div className={root({ className })} {...props} />\r\n    </AriaAutocomplete>\r\n  );\r\n};\r\n\r\nexport { Command, CommandRoot };\r\n",
      "type": "registry:ui",
      "target": "ui/command.tsx"
    }
  ]
}