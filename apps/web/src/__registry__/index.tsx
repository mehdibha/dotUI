// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "default": {
    "alert": {
      name: "alert",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/alert/alert.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/alert/alert.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "aspect-ratio": {
      name: "aspect-ratio",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/aspect-ratio/aspect-ratio.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/aspect-ratio/aspect-ratio.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "avatar": {
      name: "avatar",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/avatar/avatar.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/avatar/avatar.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "badge": {
      name: "badge",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/badge/badge.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/badge/badge.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "breadcrumbs": {
      name: "breadcrumbs",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/breadcrumbs/breadcrumbs.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/breadcrumbs/breadcrumbs.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "button": {
      name: "button",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/button/button.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/button/button.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar": {
      name: "calendar",
      type: "registry:core",
      registryDependencies: ["button","heading","text"],
      files: ["registry/ui/default/core/calendar/calendar.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/calendar.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox": {
      name: "checkbox",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/checkbox/checkbox.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox/checkbox.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group": {
      name: "checkbox-group",
      type: "registry:core",
      registryDependencies: ["checkbox"],
      files: ["registry/ui/default/core/checkbox-group/checkbox-group.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/checkbox-group.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-area": {
      name: "color-area",
      type: "registry:core",
      registryDependencies: ["color-thumb"],
      files: ["registry/ui/default/core/color-area/color-area.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-area/color-area.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field": {
      name: "color-field",
      type: "registry:core",
      registryDependencies: ["field","input"],
      files: ["registry/ui/default/core/color-field/color-field.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/color-field.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-picker": {
      name: "color-picker",
      type: "registry:core",
      registryDependencies: ["button","color-area","color-field","color-slider","color-swatch","dialog","list-box","select"],
      files: ["registry/ui/default/core/color-picker/color-picker.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-picker/color-picker.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-slider": {
      name: "color-slider",
      type: "registry:core",
      registryDependencies: ["color-thumb","field"],
      files: ["registry/ui/default/core/color-slider/color-slider.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-slider/color-slider.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-swatch": {
      name: "color-swatch",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/color-swatch/color-swatch.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-swatch/color-swatch.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-thumb": {
      name: "color-thumb",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/color-thumb/color-thumb.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-thumb/color-thumb.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox": {
      name: "combobox",
      type: "registry:core",
      registryDependencies: ["button","field","input","list-box","overlay"],
      files: ["registry/ui/default/core/combobox/combobox.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/combobox.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field": {
      name: "date-field",
      type: "registry:core",
      registryDependencies: ["date-input","field","input"],
      files: ["registry/ui/default/core/date-field/date-field.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/date-field.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-input": {
      name: "date-input",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/date-input/date-input.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-input/date-input.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker": {
      name: "date-picker",
      type: "registry:core",
      registryDependencies: ["button","calendar","dialog","date-input","field","input"],
      files: ["registry/ui/default/core/date-picker/date-picker.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/date-picker.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker": {
      name: "date-range-picker",
      type: "registry:core",
      registryDependencies: ["button","range-calendar","dialog","date-input","field","input"],
      files: ["registry/ui/default/core/date-range-picker/date-range-picker.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/date-range-picker.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog": {
      name: "dialog",
      type: "registry:core",
      registryDependencies: ["overlay","heading","text"],
      files: ["registry/ui/default/core/dialog/dialog.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/dialog.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "drop-zone": {
      name: "drop-zone",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/drop-zone/drop-zone.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/drop-zone/drop-zone.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "field": {
      name: "field",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/field/field.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/field/field.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "file-trigger": {
      name: "file-trigger",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/file-trigger/file-trigger.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/file-trigger/file-trigger.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "group": {
      name: "group",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/group/group.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/group/group.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "heading": {
      name: "heading",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/heading/heading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/heading/heading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "input": {
      name: "input",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/input/input.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/input/input.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "kbd": {
      name: "kbd",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/kbd/kbd.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/kbd/kbd.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "link": {
      name: "link",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/link/link.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/link/link.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box": {
      name: "list-box",
      type: "registry:core",
      registryDependencies: ["text"],
      files: ["registry/ui/default/core/list-box/list-box.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/list-box.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu": {
      name: "menu",
      type: "registry:core",
      registryDependencies: ["overlay","kbd","text"],
      files: ["registry/ui/default/core/menu/menu.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/menu.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field": {
      name: "number-field",
      type: "registry:core",
      registryDependencies: ["input","field","button"],
      files: ["registry/ui/default/core/number-field/number-field.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/number-field.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "overlay": {
      name: "overlay",
      type: "registry:core",
      registryDependencies: ["button"],
      files: ["registry/ui/default/core/overlay/overlay.tsx","registry/ui/default/core/overlay/use-motion-drawer.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/overlay/overlay.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress": {
      name: "progress",
      type: "registry:core",
      registryDependencies: ["field"],
      files: ["registry/ui/default/core/progress/progress.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/progress.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group": {
      name: "radio-group",
      type: "registry:core",
      registryDependencies: ["field"],
      files: ["registry/ui/default/core/radio-group/radio-group.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/radio-group.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar": {
      name: "range-calendar",
      type: "registry:core",
      registryDependencies: ["button","calendar","heading","text"],
      files: ["registry/ui/default/core/range-calendar/range-calendar.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/range-calendar.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "scroll-area": {
      name: "scroll-area",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/scroll-area/scroll-area.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/scroll-area/scroll-area.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field": {
      name: "search-field",
      type: "registry:core",
      registryDependencies: ["button","field","input"],
      files: ["registry/ui/default/core/search-field/search-field.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/search-field.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "section": {
      name: "section",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/section/section.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/section/section.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select": {
      name: "select",
      type: "registry:core",
      registryDependencies: ["button","field","list-box","overlay"],
      files: ["registry/ui/default/core/select/select.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/select.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "separator": {
      name: "separator",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/separator/separator.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/separator/separator.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "skeleton": {
      name: "skeleton",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/separator/separator.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/separator/separator.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider": {
      name: "slider",
      type: "registry:core",
      registryDependencies: ["field"],
      files: ["registry/ui/default/core/slider/slider.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/slider.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "switch": {
      name: "switch",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/switch/switch.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/switch/switch.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tabs": {
      name: "tabs",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/tabs/tabs.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tabs/tabs.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text": {
      name: "text",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/text/text.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text/text.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area": {
      name: "text-area",
      type: "registry:core",
      registryDependencies: ["field","input","text-field"],
      files: ["registry/ui/default/core/text-area/text-area.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/text-area.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field": {
      name: "text-field",
      type: "registry:core",
      registryDependencies: ["field","input"],
      files: ["registry/ui/default/core/text-field/text-field.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/text-field.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field": {
      name: "time-field",
      type: "registry:core",
      registryDependencies: ["field","input","date-input"],
      files: ["registry/ui/default/core/time-field/time-field.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/time-field.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "toggle-button": {
      name: "toggle-button",
      type: "registry:core",
      registryDependencies: undefined,
      files: ["registry/ui/default/core/toggle-button/toggle-button.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/toggle-button/toggle-button.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tooltip": {
      name: "tooltip",
      type: "registry:core",
      registryDependencies: ["overlay","text"],
      files: ["registry/ui/default/core/tooltip/tooltip.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tooltip/tooltip.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "alert-action": {
      name: "alert-action",
      type: "registry:demo",
      registryDependencies: ["alert"],
      files: ["registry/ui/default/core/alert/demos/action.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/alert/demos/action.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "alert-composition": {
      name: "alert-composition",
      type: "registry:demo",
      registryDependencies: ["alert"],
      files: ["registry/ui/default/core/alert/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/alert/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "alert-content": {
      name: "alert-content",
      type: "registry:demo",
      registryDependencies: ["alert"],
      files: ["registry/ui/default/core/alert/demos/content.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/alert/demos/content.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "alert-custom-icon": {
      name: "alert-custom-icon",
      type: "registry:demo",
      registryDependencies: ["alert"],
      files: ["registry/ui/default/core/alert/demos/custom-icon.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/alert/demos/custom-icon.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "alert-default": {
      name: "alert-default",
      type: "registry:demo",
      registryDependencies: ["alert"],
      files: ["registry/ui/default/core/alert/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/alert/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "alert-title": {
      name: "alert-title",
      type: "registry:demo",
      registryDependencies: ["alert"],
      files: ["registry/ui/default/core/alert/demos/title.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/alert/demos/title.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "alert-variants": {
      name: "alert-variants",
      type: "registry:demo",
      registryDependencies: ["alert"],
      files: ["registry/ui/default/core/alert/demos/variants.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/alert/demos/variants.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "aspect-ratio-as-child": {
      name: "aspect-ratio-as-child",
      type: "registry:demo",
      registryDependencies: ["aspect-ratio"],
      files: ["registry/ui/default/core/aspect-ratio/demos/as-child.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/aspect-ratio/demos/as-child.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "aspect-ratio-default": {
      name: "aspect-ratio-default",
      type: "registry:demo",
      registryDependencies: ["aspect-ratio"],
      files: ["registry/ui/default/core/aspect-ratio/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/aspect-ratio/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "avatar-composition": {
      name: "avatar-composition",
      type: "registry:demo",
      registryDependencies: ["avatar"],
      files: ["registry/ui/default/core/avatar/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/avatar/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "avatar-default": {
      name: "avatar-default",
      type: "registry:demo",
      registryDependencies: ["avatar"],
      files: ["registry/ui/default/core/avatar/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/avatar/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "avatar-shape": {
      name: "avatar-shape",
      type: "registry:demo",
      registryDependencies: ["avatar"],
      files: ["registry/ui/default/core/avatar/demos/shape.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/avatar/demos/shape.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "avatar-sizes": {
      name: "avatar-sizes",
      type: "registry:demo",
      registryDependencies: ["avatar"],
      files: ["registry/ui/default/core/avatar/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/avatar/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "badge-default": {
      name: "badge-default",
      type: "registry:demo",
      registryDependencies: ["badge"],
      files: ["registry/ui/default/core/badge/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/badge/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "badge-icon": {
      name: "badge-icon",
      type: "registry:demo",
      registryDependencies: ["badge"],
      files: ["registry/ui/default/core/badge/demos/icon.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/badge/demos/icon.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "badge-sizes": {
      name: "badge-sizes",
      type: "registry:demo",
      registryDependencies: ["badge"],
      files: ["registry/ui/default/core/badge/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/badge/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "badge-variants": {
      name: "badge-variants",
      type: "registry:demo",
      registryDependencies: ["badge"],
      files: ["registry/ui/default/core/badge/demos/variants.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/badge/demos/variants.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "breadcrumbs-basic": {
      name: "breadcrumbs-basic",
      type: "registry:demo",
      registryDependencies: ["breadcrumbs"],
      files: ["registry/ui/default/core/breadcrumbs/demos/basic.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/breadcrumbs/demos/basic.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "breadcrumbs-composition": {
      name: "breadcrumbs-composition",
      type: "registry:demo",
      registryDependencies: ["breadcrumbs"],
      files: ["registry/ui/default/core/breadcrumbs/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/breadcrumbs/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "breadcrumbs-disabled": {
      name: "breadcrumbs-disabled",
      type: "registry:demo",
      registryDependencies: ["breadcrumbs"],
      files: ["registry/ui/default/core/breadcrumbs/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/breadcrumbs/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "breadcrumbs-icon": {
      name: "breadcrumbs-icon",
      type: "registry:demo",
      registryDependencies: ["breadcrumbs"],
      files: ["registry/ui/default/core/breadcrumbs/demos/icon.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/breadcrumbs/demos/icon.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "breadcrumbs-router-integration": {
      name: "breadcrumbs-router-integration",
      type: "registry:demo",
      registryDependencies: ["breadcrumbs"],
      files: ["registry/ui/default/core/breadcrumbs/demos/router-integration.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/breadcrumbs/demos/router-integration.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "button-default": {
      name: "button-default",
      type: "registry:demo",
      registryDependencies: ["button"],
      files: ["registry/ui/default/core/button/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/button/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "button-disabled": {
      name: "button-disabled",
      type: "registry:demo",
      registryDependencies: ["button"],
      files: ["registry/ui/default/core/button/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/button/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "button-link-button": {
      name: "button-link-button",
      type: "registry:demo",
      registryDependencies: ["button"],
      files: ["registry/ui/default/core/button/demos/link-button.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/button/demos/link-button.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "button-loading": {
      name: "button-loading",
      type: "registry:demo",
      registryDependencies: ["button"],
      files: ["registry/ui/default/core/button/demos/loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/button/demos/loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "button-prefix-and-suffix": {
      name: "button-prefix-and-suffix",
      type: "registry:demo",
      registryDependencies: ["button"],
      files: ["registry/ui/default/core/button/demos/prefix-and-suffix.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/button/demos/prefix-and-suffix.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "button-shapes": {
      name: "button-shapes",
      type: "registry:demo",
      registryDependencies: ["button"],
      files: ["registry/ui/default/core/button/demos/shapes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/button/demos/shapes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "button-sizes": {
      name: "button-sizes",
      type: "registry:demo",
      registryDependencies: ["button"],
      files: ["registry/ui/default/core/button/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/button/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "button-variants": {
      name: "button-variants",
      type: "registry:demo",
      registryDependencies: ["button"],
      files: ["registry/ui/default/core/button/demos/variants.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/button/demos/variants.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar-composition": {
      name: "calendar-composition",
      type: "registry:demo",
      registryDependencies: ["calendar"],
      files: ["registry/ui/default/core/calendar/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar-controlled": {
      name: "calendar-controlled",
      type: "registry:demo",
      registryDependencies: ["calendar"],
      files: ["registry/ui/default/core/calendar/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar-default": {
      name: "calendar-default",
      type: "registry:demo",
      registryDependencies: ["calendar"],
      files: ["registry/ui/default/core/calendar/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar-disabled": {
      name: "calendar-disabled",
      type: "registry:demo",
      registryDependencies: ["calendar"],
      files: ["registry/ui/default/core/calendar/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar-error-message": {
      name: "calendar-error-message",
      type: "registry:demo",
      registryDependencies: ["calendar"],
      files: ["registry/ui/default/core/calendar/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar-label": {
      name: "calendar-label",
      type: "registry:demo",
      registryDependencies: ["calendar"],
      files: ["registry/ui/default/core/calendar/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar-page-behaviour": {
      name: "calendar-page-behaviour",
      type: "registry:demo",
      registryDependencies: ["calendar"],
      files: ["registry/ui/default/core/calendar/demos/page-behaviour.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/demos/page-behaviour.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar-read-only": {
      name: "calendar-read-only",
      type: "registry:demo",
      registryDependencies: ["calendar"],
      files: ["registry/ui/default/core/calendar/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar-uncontrolled": {
      name: "calendar-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["calendar"],
      files: ["registry/ui/default/core/calendar/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar-unvailable-dates": {
      name: "calendar-unvailable-dates",
      type: "registry:demo",
      registryDependencies: ["calendar"],
      files: ["registry/ui/default/core/calendar/demos/unvailable-dates.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/demos/unvailable-dates.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar-validation": {
      name: "calendar-validation",
      type: "registry:demo",
      registryDependencies: ["calendar"],
      files: ["registry/ui/default/core/calendar/demos/validation.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/demos/validation.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "calendar-visible-months": {
      name: "calendar-visible-months",
      type: "registry:demo",
      registryDependencies: ["calendar"],
      files: ["registry/ui/default/core/calendar/demos/visible-months.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/calendar/demos/visible-months.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-card": {
      name: "checkbox-card",
      type: "registry:demo",
      registryDependencies: ["checkbox"],
      files: ["registry/ui/default/core/checkbox/demos/card.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox/demos/card.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-controlled": {
      name: "checkbox-controlled",
      type: "registry:demo",
      registryDependencies: ["checkbox"],
      files: ["registry/ui/default/core/checkbox/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-default": {
      name: "checkbox-default",
      type: "registry:demo",
      registryDependencies: ["checkbox"],
      files: ["registry/ui/default/core/checkbox/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-disabled": {
      name: "checkbox-disabled",
      type: "registry:demo",
      registryDependencies: ["checkbox"],
      files: ["registry/ui/default/core/checkbox/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-indeterminate": {
      name: "checkbox-indeterminate",
      type: "registry:demo",
      registryDependencies: ["checkbox"],
      files: ["registry/ui/default/core/checkbox/demos/indeterminate.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox/demos/indeterminate.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-read-only": {
      name: "checkbox-read-only",
      type: "registry:demo",
      registryDependencies: ["checkbox"],
      files: ["registry/ui/default/core/checkbox/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-uncontrolled": {
      name: "checkbox-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["checkbox"],
      files: ["registry/ui/default/core/checkbox/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group-cards": {
      name: "checkbox-group-cards",
      type: "registry:demo",
      registryDependencies: ["checkbox-group"],
      files: ["registry/ui/default/core/checkbox-group/demos/cards.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/demos/cards.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group-composition": {
      name: "checkbox-group-composition",
      type: "registry:demo",
      registryDependencies: ["checkbox-group"],
      files: ["registry/ui/default/core/checkbox-group/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group-contextual-help": {
      name: "checkbox-group-contextual-help",
      type: "registry:demo",
      registryDependencies: ["checkbox-group"],
      files: ["registry/ui/default/core/checkbox-group/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group-controlled": {
      name: "checkbox-group-controlled",
      type: "registry:demo",
      registryDependencies: ["checkbox-group"],
      files: ["registry/ui/default/core/checkbox-group/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group-default": {
      name: "checkbox-group-default",
      type: "registry:demo",
      registryDependencies: ["checkbox-group"],
      files: ["registry/ui/default/core/checkbox-group/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group-description": {
      name: "checkbox-group-description",
      type: "registry:demo",
      registryDependencies: ["checkbox-group"],
      files: ["registry/ui/default/core/checkbox-group/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group-disabled": {
      name: "checkbox-group-disabled",
      type: "registry:demo",
      registryDependencies: ["checkbox-group"],
      files: ["registry/ui/default/core/checkbox-group/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group-error-message": {
      name: "checkbox-group-error-message",
      type: "registry:demo",
      registryDependencies: ["checkbox-group"],
      files: ["registry/ui/default/core/checkbox-group/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group-label": {
      name: "checkbox-group-label",
      type: "registry:demo",
      registryDependencies: ["checkbox-group"],
      files: ["registry/ui/default/core/checkbox-group/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group-read-only": {
      name: "checkbox-group-read-only",
      type: "registry:demo",
      registryDependencies: ["checkbox-group"],
      files: ["registry/ui/default/core/checkbox-group/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group-required": {
      name: "checkbox-group-required",
      type: "registry:demo",
      registryDependencies: ["checkbox-group"],
      files: ["registry/ui/default/core/checkbox-group/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "checkbox-group-uncontrolled": {
      name: "checkbox-group-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["checkbox-group"],
      files: ["registry/ui/default/core/checkbox-group/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/checkbox-group/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-area-channels": {
      name: "color-area-channels",
      type: "registry:demo",
      registryDependencies: ["color-area"],
      files: ["registry/ui/default/core/color-area/demos/channels.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-area/demos/channels.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-area-composition": {
      name: "color-area-composition",
      type: "registry:demo",
      registryDependencies: ["color-area"],
      files: ["registry/ui/default/core/color-area/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-area/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-area-controlled": {
      name: "color-area-controlled",
      type: "registry:demo",
      registryDependencies: ["color-area"],
      files: ["registry/ui/default/core/color-area/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-area/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-area-default": {
      name: "color-area-default",
      type: "registry:demo",
      registryDependencies: ["color-area"],
      files: ["registry/ui/default/core/color-area/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-area/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-area-disabled": {
      name: "color-area-disabled",
      type: "registry:demo",
      registryDependencies: ["color-area"],
      files: ["registry/ui/default/core/color-area/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-area/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-area-uncontrolled": {
      name: "color-area-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["color-area"],
      files: ["registry/ui/default/core/color-area/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-area/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-composition": {
      name: "color-field-composition",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-contextual-help": {
      name: "color-field-contextual-help",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-controlled": {
      name: "color-field-controlled",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-default": {
      name: "color-field-default",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-description": {
      name: "color-field-description",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-disabled": {
      name: "color-field-disabled",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-error-message": {
      name: "color-field-error-message",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-form": {
      name: "color-field-form",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/form.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/form.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-label": {
      name: "color-field-label",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-loading": {
      name: "color-field-loading",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-prefix-and-suffix": {
      name: "color-field-prefix-and-suffix",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/prefix-and-suffix.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/prefix-and-suffix.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-read-only": {
      name: "color-field-read-only",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-required": {
      name: "color-field-required",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-sizes": {
      name: "color-field-sizes",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-field-uncontrolled": {
      name: "color-field-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["color-field"],
      files: ["registry/ui/default/core/color-field/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-field/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-picker-composition": {
      name: "color-picker-composition",
      type: "registry:demo",
      registryDependencies: ["color-picker"],
      files: ["registry/ui/default/core/color-picker/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-picker/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-picker-controlled": {
      name: "color-picker-controlled",
      type: "registry:demo",
      registryDependencies: ["color-picker"],
      files: ["registry/ui/default/core/color-picker/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-picker/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-picker-default": {
      name: "color-picker-default",
      type: "registry:demo",
      registryDependencies: ["color-picker"],
      files: ["registry/ui/default/core/color-picker/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-picker/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-picker-options": {
      name: "color-picker-options",
      type: "registry:demo",
      registryDependencies: ["color-picker"],
      files: ["registry/ui/default/core/color-picker/demos/options.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-picker/demos/options.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-picker-uncontrolled": {
      name: "color-picker-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["color-picker"],
      files: ["registry/ui/default/core/color-picker/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-picker/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-slider-channel": {
      name: "color-slider-channel",
      type: "registry:demo",
      registryDependencies: ["color-slider"],
      files: ["registry/ui/default/core/color-slider/demos/channel.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-slider/demos/channel.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-slider-composition": {
      name: "color-slider-composition",
      type: "registry:demo",
      registryDependencies: ["color-slider"],
      files: ["registry/ui/default/core/color-slider/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-slider/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-slider-controlled": {
      name: "color-slider-controlled",
      type: "registry:demo",
      registryDependencies: ["color-slider"],
      files: ["registry/ui/default/core/color-slider/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-slider/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-slider-default": {
      name: "color-slider-default",
      type: "registry:demo",
      registryDependencies: ["color-slider"],
      files: ["registry/ui/default/core/color-slider/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-slider/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-slider-disabled": {
      name: "color-slider-disabled",
      type: "registry:demo",
      registryDependencies: ["color-slider"],
      files: ["registry/ui/default/core/color-slider/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-slider/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-slider-label": {
      name: "color-slider-label",
      type: "registry:demo",
      registryDependencies: ["color-slider"],
      files: ["registry/ui/default/core/color-slider/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-slider/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-slider-uncontrolled": {
      name: "color-slider-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["color-slider"],
      files: ["registry/ui/default/core/color-slider/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-slider/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-slider-vertical": {
      name: "color-slider-vertical",
      type: "registry:demo",
      registryDependencies: ["color-slider"],
      files: ["registry/ui/default/core/color-slider/demos/vertical.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-slider/demos/vertical.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "color-swatch-default": {
      name: "color-swatch-default",
      type: "registry:demo",
      registryDependencies: ["color-swatch"],
      files: ["registry/ui/default/core/color-swatch/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/color-swatch/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-async-loading": {
      name: "combobox-async-loading",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/async-loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/async-loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-basic": {
      name: "combobox-basic",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/basic.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/basic.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-composition": {
      name: "combobox-composition",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-contextual-help": {
      name: "combobox-contextual-help",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-controlled": {
      name: "combobox-controlled",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-custom-value": {
      name: "combobox-custom-value",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/custom-value.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/custom-value.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-description": {
      name: "combobox-description",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-disabled": {
      name: "combobox-disabled",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-label": {
      name: "combobox-label",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-loading": {
      name: "combobox-loading",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-required": {
      name: "combobox-required",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-sections": {
      name: "combobox-sections",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/sections.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/sections.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-uncontrolled": {
      name: "combobox-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "combobox-validation": {
      name: "combobox-validation",
      type: "registry:demo",
      registryDependencies: ["combobox"],
      files: ["registry/ui/default/core/combobox/demos/validation.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/combobox/demos/validation.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-composition": {
      name: "date-field-composition",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-contextual-help": {
      name: "date-field-contextual-help",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-controlled": {
      name: "date-field-controlled",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-default": {
      name: "date-field-default",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-description": {
      name: "date-field-description",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-disabled": {
      name: "date-field-disabled",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-error-message": {
      name: "date-field-error-message",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-granularity": {
      name: "date-field-granularity",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/granularity.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/granularity.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-hide-time-zone": {
      name: "date-field-hide-time-zone",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/hide-time-zone.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/hide-time-zone.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-hour-cycle": {
      name: "date-field-hour-cycle",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/hour-cycle.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/hour-cycle.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-label": {
      name: "date-field-label",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-loading": {
      name: "date-field-loading",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-placeholder": {
      name: "date-field-placeholder",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/placeholder.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/placeholder.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-prefix-and-suffix": {
      name: "date-field-prefix-and-suffix",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/prefix-and-suffix.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/prefix-and-suffix.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-read-only": {
      name: "date-field-read-only",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-required": {
      name: "date-field-required",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-sizes": {
      name: "date-field-sizes",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-time-zones": {
      name: "date-field-time-zones",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/time-zones.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/time-zones.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-field-uncontrolled": {
      name: "date-field-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["date-field"],
      files: ["registry/ui/default/core/date-field/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-field/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-composition": {
      name: "date-picker-composition",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-contextual-help": {
      name: "date-picker-contextual-help",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-controlled": {
      name: "date-picker-controlled",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-default": {
      name: "date-picker-default",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-description": {
      name: "date-picker-description",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-disabled": {
      name: "date-picker-disabled",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-error-message": {
      name: "date-picker-error-message",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-granularity": {
      name: "date-picker-granularity",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/granularity.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/granularity.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-hide-time-zone": {
      name: "date-picker-hide-time-zone",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/hide-time-zone.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/hide-time-zone.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-hour-cycle": {
      name: "date-picker-hour-cycle",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/hour-cycle.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/hour-cycle.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-label": {
      name: "date-picker-label",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-loading": {
      name: "date-picker-loading",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-placeholder": {
      name: "date-picker-placeholder",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/placeholder.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/placeholder.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-prefix": {
      name: "date-picker-prefix",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/prefix.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/prefix.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-read-only": {
      name: "date-picker-read-only",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-required": {
      name: "date-picker-required",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-sizes": {
      name: "date-picker-sizes",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-time-zones": {
      name: "date-picker-time-zones",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/time-zones.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/time-zones.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-picker-uncontrolled": {
      name: "date-picker-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["date-picker"],
      files: ["registry/ui/default/core/date-picker/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-picker/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-composition": {
      name: "date-range-picker-composition",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-contextual-help": {
      name: "date-range-picker-contextual-help",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-controlled": {
      name: "date-range-picker-controlled",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-default": {
      name: "date-range-picker-default",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-description": {
      name: "date-range-picker-description",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-disabled": {
      name: "date-range-picker-disabled",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-error-message": {
      name: "date-range-picker-error-message",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-granularity": {
      name: "date-range-picker-granularity",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/granularity.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/granularity.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-hide-time-zone": {
      name: "date-range-picker-hide-time-zone",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/hide-time-zone.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/hide-time-zone.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-hour-cycle": {
      name: "date-range-picker-hour-cycle",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/hour-cycle.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/hour-cycle.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-label": {
      name: "date-range-picker-label",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-loading": {
      name: "date-range-picker-loading",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-placeholder": {
      name: "date-range-picker-placeholder",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/placeholder.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/placeholder.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-prefix": {
      name: "date-range-picker-prefix",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/prefix.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/prefix.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-read-only": {
      name: "date-range-picker-read-only",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-required": {
      name: "date-range-picker-required",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-sizes": {
      name: "date-range-picker-sizes",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-time-zones": {
      name: "date-range-picker-time-zones",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/time-zones.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/time-zones.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "date-range-picker-uncontrolled": {
      name: "date-range-picker-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["date-range-picker"],
      files: ["registry/ui/default/core/date-range-picker/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/date-range-picker/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-alert-dialog": {
      name: "dialog-alert-dialog",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/alert-dialog.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/alert-dialog.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-async-form-submission": {
      name: "dialog-async-form-submission",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/async-form-submission.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/async-form-submission.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-basic": {
      name: "dialog-basic",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/basic.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/basic.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-composition": {
      name: "dialog-composition",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-controlled": {
      name: "dialog-controlled",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-description": {
      name: "dialog-description",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-dismiss-button": {
      name: "dialog-dismiss-button",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/dismiss-button.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/dismiss-button.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-dismissable": {
      name: "dialog-dismissable",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/dismissable.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/dismissable.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-drawer": {
      name: "dialog-drawer",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/drawer.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/drawer.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-inset-content": {
      name: "dialog-inset-content",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/inset-content.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/inset-content.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-nested": {
      name: "dialog-nested",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/nested.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/nested.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-popover": {
      name: "dialog-popover",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/popover.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/popover.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-title": {
      name: "dialog-title",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/title.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/title.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "dialog-types": {
      name: "dialog-types",
      type: "registry:demo",
      registryDependencies: ["dialog"],
      files: ["registry/ui/default/core/dialog/demos/types.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/dialog/demos/types.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "drop-zone-default": {
      name: "drop-zone-default",
      type: "registry:demo",
      registryDependencies: ["drop-zone"],
      files: ["registry/ui/default/core/drop-zone/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/drop-zone/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "drop-zone-disabled": {
      name: "drop-zone-disabled",
      type: "registry:demo",
      registryDependencies: ["drop-zone"],
      files: ["registry/ui/default/core/drop-zone/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/drop-zone/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "drop-zone-file-trigger": {
      name: "drop-zone-file-trigger",
      type: "registry:demo",
      registryDependencies: ["drop-zone"],
      files: ["registry/ui/default/core/drop-zone/demos/file-trigger.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/drop-zone/demos/file-trigger.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "drop-zone-label": {
      name: "drop-zone-label",
      type: "registry:demo",
      registryDependencies: ["drop-zone"],
      files: ["registry/ui/default/core/drop-zone/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/drop-zone/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "file-trigger-default": {
      name: "file-trigger-default",
      type: "registry:demo",
      registryDependencies: ["file-trigger"],
      files: ["registry/ui/default/core/file-trigger/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/file-trigger/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "file-trigger-directory-selection": {
      name: "file-trigger-directory-selection",
      type: "registry:demo",
      registryDependencies: ["file-trigger"],
      files: ["registry/ui/default/core/file-trigger/demos/directory-selection.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/file-trigger/demos/directory-selection.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "file-trigger-file-types": {
      name: "file-trigger-file-types",
      type: "registry:demo",
      registryDependencies: ["file-trigger"],
      files: ["registry/ui/default/core/file-trigger/demos/file-types.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/file-trigger/demos/file-types.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "file-trigger-media-capture": {
      name: "file-trigger-media-capture",
      type: "registry:demo",
      registryDependencies: ["file-trigger"],
      files: ["registry/ui/default/core/file-trigger/demos/media-capture.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/file-trigger/demos/media-capture.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "file-trigger-multiple-files": {
      name: "file-trigger-multiple-files",
      type: "registry:demo",
      registryDependencies: ["file-trigger"],
      files: ["registry/ui/default/core/file-trigger/demos/multiple-files.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/file-trigger/demos/multiple-files.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "link-default": {
      name: "link-default",
      type: "registry:demo",
      registryDependencies: ["link"],
      files: ["registry/ui/default/core/link/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/link/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "link-disabled": {
      name: "link-disabled",
      type: "registry:demo",
      registryDependencies: ["link"],
      files: ["registry/ui/default/core/link/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/link/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "link-icon": {
      name: "link-icon",
      type: "registry:demo",
      registryDependencies: ["link"],
      files: ["registry/ui/default/core/link/demos/icon.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/link/demos/icon.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "link-variants": {
      name: "link-variants",
      type: "registry:demo",
      registryDependencies: ["link"],
      files: ["registry/ui/default/core/link/demos/variants.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/link/demos/variants.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-async-loading": {
      name: "list-box-async-loading",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/async-loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/async-loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-basic": {
      name: "list-box-basic",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/basic.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/basic.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-composition": {
      name: "list-box-composition",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-contact-list": {
      name: "list-box-contact-list",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/contact-list.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/contact-list.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-controlled": {
      name: "list-box-controlled",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-disabled-items": {
      name: "list-box-disabled-items",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/disabled-items.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/disabled-items.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-empty-state": {
      name: "list-box-empty-state",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/empty-state.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/empty-state.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-grid": {
      name: "list-box-grid",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/grid.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/grid.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-horizontal": {
      name: "list-box-horizontal",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/horizontal.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/horizontal.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-image-grid": {
      name: "list-box-image-grid",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/image-grid.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/image-grid.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-item-variant": {
      name: "list-box-item-variant",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/item-variant.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/item-variant.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-label-and-description": {
      name: "list-box-label-and-description",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/label-and-description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/label-and-description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-links": {
      name: "list-box-links",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/links.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/links.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-loading": {
      name: "list-box-loading",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-prefix-and-suffix": {
      name: "list-box-prefix-and-suffix",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/prefix-and-suffix.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/prefix-and-suffix.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-sections": {
      name: "list-box-sections",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/sections.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/sections.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-selection-behavior": {
      name: "list-box-selection-behavior",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/selection-behavior.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/selection-behavior.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-selection-mode": {
      name: "list-box-selection-mode",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/selection-mode.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/selection-mode.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-separator": {
      name: "list-box-separator",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/separator.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/separator.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "list-box-uncontrolled": {
      name: "list-box-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["list-box"],
      files: ["registry/ui/default/core/list-box/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/list-box/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-basic": {
      name: "menu-basic",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/basic.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/basic.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-composition": {
      name: "menu-composition",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-controlled": {
      name: "menu-controlled",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-disabled-items": {
      name: "menu-disabled-items",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/disabled-items.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/disabled-items.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-item-variant": {
      name: "menu-item-variant",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/item-variant.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/item-variant.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-label-and-description": {
      name: "menu-label-and-description",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/label-and-description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/label-and-description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-link-items": {
      name: "menu-link-items",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/link-items.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/link-items.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-long-press": {
      name: "menu-long-press",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/long-press.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/long-press.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-multiple-selection": {
      name: "menu-multiple-selection",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/multiple-selection.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/multiple-selection.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-overlay-type": {
      name: "menu-overlay-type",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/overlay-type.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/overlay-type.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-placement": {
      name: "menu-placement",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/placement.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/placement.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-prefix-and-suffix": {
      name: "menu-prefix-and-suffix",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/prefix-and-suffix.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/prefix-and-suffix.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-section": {
      name: "menu-section",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/section.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/section.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-separator": {
      name: "menu-separator",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/separator.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/separator.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-shortcut": {
      name: "menu-shortcut",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/shortcut.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/shortcut.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-single-selection": {
      name: "menu-single-selection",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/single-selection.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/single-selection.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "menu-submenus": {
      name: "menu-submenus",
      type: "registry:demo",
      registryDependencies: ["menu"],
      files: ["registry/ui/default/core/menu/demos/submenus.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/menu/demos/submenus.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-composition": {
      name: "number-field-composition",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-contextual-help": {
      name: "number-field-contextual-help",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-controlled": {
      name: "number-field-controlled",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-default": {
      name: "number-field-default",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-description": {
      name: "number-field-description",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-disabled": {
      name: "number-field-disabled",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-error-message": {
      name: "number-field-error-message",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-format-options": {
      name: "number-field-format-options",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/format-options.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/format-options.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-label": {
      name: "number-field-label",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-read-only": {
      name: "number-field-read-only",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-required": {
      name: "number-field-required",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-sizes": {
      name: "number-field-sizes",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "number-field-uncontrolled": {
      name: "number-field-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["number-field"],
      files: ["registry/ui/default/core/number-field/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/number-field/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-composition": {
      name: "progress-composition",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-custom-color": {
      name: "progress-custom-color",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/custom-color.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/custom-color.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-custom-value-label": {
      name: "progress-custom-value-label",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/custom-value-label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/custom-value-label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-default": {
      name: "progress-default",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-duration": {
      name: "progress-duration",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/duration.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/duration.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-format-options": {
      name: "progress-format-options",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/format-options.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/format-options.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-indeterminate": {
      name: "progress-indeterminate",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/indeterminate.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/indeterminate.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-label": {
      name: "progress-label",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-min-max-values": {
      name: "progress-min-max-values",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/min-max-values.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/min-max-values.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-shape": {
      name: "progress-shape",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/shape.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/shape.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-sizes": {
      name: "progress-sizes",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-toolbar": {
      name: "progress-toolbar",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/toolbar.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/toolbar.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-value-label": {
      name: "progress-value-label",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/value-label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/value-label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "progress-variants": {
      name: "progress-variants",
      type: "registry:demo",
      registryDependencies: ["progress"],
      files: ["registry/ui/default/core/progress/demos/variants.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/progress/demos/variants.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-cards": {
      name: "radio-group-cards",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/cards.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/cards.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-composition": {
      name: "radio-group-composition",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-contextual-help": {
      name: "radio-group-contextual-help",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-controlled": {
      name: "radio-group-controlled",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-default": {
      name: "radio-group-default",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-description": {
      name: "radio-group-description",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-disabled": {
      name: "radio-group-disabled",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-error-message": {
      name: "radio-group-error-message",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-label": {
      name: "radio-group-label",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-orientation": {
      name: "radio-group-orientation",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/orientation.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/orientation.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-read-only": {
      name: "radio-group-read-only",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-required": {
      name: "radio-group-required",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "radio-group-uncontrolled": {
      name: "radio-group-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["radio-group"],
      files: ["registry/ui/default/core/radio-group/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/radio-group/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-composition": {
      name: "range-calendar-composition",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-controlled": {
      name: "range-calendar-controlled",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-default": {
      name: "range-calendar-default",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-disabled": {
      name: "range-calendar-disabled",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-error-message": {
      name: "range-calendar-error-message",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-label": {
      name: "range-calendar-label",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-non-contiguous-ranges": {
      name: "range-calendar-non-contiguous-ranges",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/non-contiguous-ranges.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/non-contiguous-ranges.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-page-behaviour": {
      name: "range-calendar-page-behaviour",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/page-behaviour.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/page-behaviour.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-read-only": {
      name: "range-calendar-read-only",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-uncontrolled": {
      name: "range-calendar-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-unvailable-dates": {
      name: "range-calendar-unvailable-dates",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/unvailable-dates.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/unvailable-dates.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-validation": {
      name: "range-calendar-validation",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/validation.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/validation.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "range-calendar-visible-months": {
      name: "range-calendar-visible-months",
      type: "registry:demo",
      registryDependencies: ["range-calendar"],
      files: ["registry/ui/default/core/range-calendar/demos/visible-months.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/range-calendar/demos/visible-months.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "scroll-area-default": {
      name: "scroll-area-default",
      type: "registry:demo",
      registryDependencies: ["scroll-area"],
      files: ["registry/ui/default/core/scroll-area/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/scroll-area/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "scroll-area-scrollbars": {
      name: "scroll-area-scrollbars",
      type: "registry:demo",
      registryDependencies: ["scroll-area"],
      files: ["registry/ui/default/core/scroll-area/demos/scrollbars.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/scroll-area/demos/scrollbars.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "scroll-area-sizes": {
      name: "scroll-area-sizes",
      type: "registry:demo",
      registryDependencies: ["scroll-area"],
      files: ["registry/ui/default/core/scroll-area/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/scroll-area/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-composition": {
      name: "search-field-composition",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-contextual-help": {
      name: "search-field-contextual-help",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-controlled": {
      name: "search-field-controlled",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-default": {
      name: "search-field-default",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-description": {
      name: "search-field-description",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-disabled": {
      name: "search-field-disabled",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-error-message": {
      name: "search-field-error-message",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-form": {
      name: "search-field-form",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/form.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/form.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-label": {
      name: "search-field-label",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-loading": {
      name: "search-field-loading",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-prefix-and-suffix": {
      name: "search-field-prefix-and-suffix",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/prefix-and-suffix.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/prefix-and-suffix.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-read-only": {
      name: "search-field-read-only",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-required": {
      name: "search-field-required",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-sizes": {
      name: "search-field-sizes",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "search-field-uncontrolled": {
      name: "search-field-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["search-field"],
      files: ["registry/ui/default/core/search-field/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/search-field/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-async-loading": {
      name: "select-async-loading",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/async-loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/async-loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-basic": {
      name: "select-basic",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/basic.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/basic.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-composition": {
      name: "select-composition",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-contextual-help": {
      name: "select-contextual-help",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-controlled": {
      name: "select-controlled",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-description": {
      name: "select-description",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-disabled": {
      name: "select-disabled",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-label": {
      name: "select-label",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-links": {
      name: "select-links",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/links.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/links.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-loading": {
      name: "select-loading",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-placeholder": {
      name: "select-placeholder",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/placeholder.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/placeholder.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-required": {
      name: "select-required",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-sections": {
      name: "select-sections",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/sections.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/sections.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-uncontrolled": {
      name: "select-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "select-validation": {
      name: "select-validation",
      type: "registry:demo",
      registryDependencies: ["select"],
      files: ["registry/ui/default/core/select/demos/validation.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/select/demos/validation.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "separator-card": {
      name: "separator-card",
      type: "registry:demo",
      registryDependencies: ["separator"],
      files: ["registry/ui/default/core/separator/demos/card.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/separator/demos/card.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "separator-orientation": {
      name: "separator-orientation",
      type: "registry:demo",
      registryDependencies: ["separator"],
      files: ["registry/ui/default/core/separator/demos/orientation.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/separator/demos/orientation.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "skeleton-api-simulation": {
      name: "skeleton-api-simulation",
      type: "registry:demo",
      registryDependencies: ["skeleton"],
      files: ["registry/ui/default/core/skeleton/demos/api-simulation.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/skeleton/demos/api-simulation.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "skeleton-card": {
      name: "skeleton-card",
      type: "registry:demo",
      registryDependencies: ["skeleton"],
      files: ["registry/ui/default/core/skeleton/demos/card.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/skeleton/demos/card.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "skeleton-children": {
      name: "skeleton-children",
      type: "registry:demo",
      registryDependencies: ["skeleton"],
      files: ["registry/ui/default/core/skeleton/demos/children.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/skeleton/demos/children.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "skeleton-fixed-size-children": {
      name: "skeleton-fixed-size-children",
      type: "registry:demo",
      registryDependencies: ["skeleton"],
      files: ["registry/ui/default/core/skeleton/demos/fixed-size-children.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/skeleton/demos/fixed-size-children.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "skeleton-show": {
      name: "skeleton-show",
      type: "registry:demo",
      registryDependencies: ["skeleton"],
      files: ["registry/ui/default/core/skeleton/demos/show.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/skeleton/demos/show.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-advanced-composition": {
      name: "slider-advanced-composition",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/advanced-composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/advanced-composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-composition": {
      name: "slider-composition",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-controlled": {
      name: "slider-controlled",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-default": {
      name: "slider-default",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-description": {
      name: "slider-description",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-disabled": {
      name: "slider-disabled",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-format-options": {
      name: "slider-format-options",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/format-options.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/format-options.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-label": {
      name: "slider-label",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-range": {
      name: "slider-range",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/range.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/range.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-sizes": {
      name: "slider-sizes",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-step": {
      name: "slider-step",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/step.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/step.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-uncontrolled": {
      name: "slider-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-value-label": {
      name: "slider-value-label",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/value-label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/value-label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-value-scale": {
      name: "slider-value-scale",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/value-scale.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/value-scale.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "slider-vertical": {
      name: "slider-vertical",
      type: "registry:demo",
      registryDependencies: ["slider"],
      files: ["registry/ui/default/core/slider/demos/vertical.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/slider/demos/vertical.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "switch-controlled": {
      name: "switch-controlled",
      type: "registry:demo",
      registryDependencies: ["switch"],
      files: ["registry/ui/default/core/switch/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/switch/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "switch-default": {
      name: "switch-default",
      type: "registry:demo",
      registryDependencies: ["switch"],
      files: ["registry/ui/default/core/switch/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/switch/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "switch-disabled": {
      name: "switch-disabled",
      type: "registry:demo",
      registryDependencies: ["switch"],
      files: ["registry/ui/default/core/switch/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/switch/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "switch-label": {
      name: "switch-label",
      type: "registry:demo",
      registryDependencies: ["switch"],
      files: ["registry/ui/default/core/switch/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/switch/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "switch-sizes": {
      name: "switch-sizes",
      type: "registry:demo",
      registryDependencies: ["switch"],
      files: ["registry/ui/default/core/switch/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/switch/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "switch-uncontrolled": {
      name: "switch-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["switch"],
      files: ["registry/ui/default/core/switch/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/switch/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tabs-basic": {
      name: "tabs-basic",
      type: "registry:demo",
      registryDependencies: ["tabs"],
      files: ["registry/ui/default/core/tabs/demos/basic.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tabs/demos/basic.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tabs-controlled": {
      name: "tabs-controlled",
      type: "registry:demo",
      registryDependencies: ["tabs"],
      files: ["registry/ui/default/core/tabs/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tabs/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tabs-disabled-item": {
      name: "tabs-disabled-item",
      type: "registry:demo",
      registryDependencies: ["tabs"],
      files: ["registry/ui/default/core/tabs/demos/disabled-item.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tabs/demos/disabled-item.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tabs-disabled": {
      name: "tabs-disabled",
      type: "registry:demo",
      registryDependencies: ["tabs"],
      files: ["registry/ui/default/core/tabs/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tabs/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tabs-keyboard-activation": {
      name: "tabs-keyboard-activation",
      type: "registry:demo",
      registryDependencies: ["tabs"],
      files: ["registry/ui/default/core/tabs/demos/keyboard-activation.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tabs/demos/keyboard-activation.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tabs-vertical": {
      name: "tabs-vertical",
      type: "registry:demo",
      registryDependencies: ["tabs"],
      files: ["registry/ui/default/core/tabs/demos/vertical.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tabs/demos/vertical.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-composition": {
      name: "text-area-composition",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-contextual-help": {
      name: "text-area-contextual-help",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-controlled": {
      name: "text-area-controlled",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-default": {
      name: "text-area-default",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-description": {
      name: "text-area-description",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-disabled": {
      name: "text-area-disabled",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-error-message": {
      name: "text-area-error-message",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-form": {
      name: "text-area-form",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/form.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/form.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-label": {
      name: "text-area-label",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-loading": {
      name: "text-area-loading",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-prefix-and-suffix": {
      name: "text-area-prefix-and-suffix",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/prefix-and-suffix.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/prefix-and-suffix.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-read-only": {
      name: "text-area-read-only",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-required": {
      name: "text-area-required",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-area-uncontrolled": {
      name: "text-area-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["text-area"],
      files: ["registry/ui/default/core/text-area/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-area/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-composition": {
      name: "text-field-composition",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-contextual-help": {
      name: "text-field-contextual-help",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-controlled": {
      name: "text-field-controlled",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-default": {
      name: "text-field-default",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-description": {
      name: "text-field-description",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-disabled": {
      name: "text-field-disabled",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-error-message": {
      name: "text-field-error-message",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-label": {
      name: "text-field-label",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-loading": {
      name: "text-field-loading",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-prefix-and-suffix": {
      name: "text-field-prefix-and-suffix",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/prefix-and-suffix.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/prefix-and-suffix.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-read-only": {
      name: "text-field-read-only",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-required": {
      name: "text-field-required",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-sizes": {
      name: "text-field-sizes",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "text-field-uncontrolled": {
      name: "text-field-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["text-field"],
      files: ["registry/ui/default/core/text-field/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/text-field/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-composition": {
      name: "time-field-composition",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-contextual-help": {
      name: "time-field-contextual-help",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/contextual-help.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/contextual-help.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-controlled": {
      name: "time-field-controlled",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-default": {
      name: "time-field-default",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-description": {
      name: "time-field-description",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/description.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/description.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-disabled": {
      name: "time-field-disabled",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-error-message": {
      name: "time-field-error-message",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/error-message.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/error-message.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-granularity": {
      name: "time-field-granularity",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/granularity.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/granularity.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-hide-time-zone": {
      name: "time-field-hide-time-zone",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/hide-time-zone.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/hide-time-zone.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-hour-cycle": {
      name: "time-field-hour-cycle",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/hour-cycle.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/hour-cycle.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-label": {
      name: "time-field-label",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/label.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/label.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-loading": {
      name: "time-field-loading",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/loading.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/loading.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-placeholder": {
      name: "time-field-placeholder",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/placeholder.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/placeholder.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-prefix-and-suffix": {
      name: "time-field-prefix-and-suffix",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/prefix-and-suffix.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/prefix-and-suffix.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-read-only": {
      name: "time-field-read-only",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/read-only.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/read-only.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-required": {
      name: "time-field-required",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/required.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/required.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-sizes": {
      name: "time-field-sizes",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-time-zones": {
      name: "time-field-time-zones",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/time-zones.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/time-zones.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "time-field-uncontrolled": {
      name: "time-field-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["time-field"],
      files: ["registry/ui/default/core/time-field/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/time-field/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "toggle-button-controlled": {
      name: "toggle-button-controlled",
      type: "registry:demo",
      registryDependencies: ["toggle-button"],
      files: ["registry/ui/default/core/toggle-button/demos/controlled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/toggle-button/demos/controlled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "toggle-button-default": {
      name: "toggle-button-default",
      type: "registry:demo",
      registryDependencies: ["toggle-button"],
      files: ["registry/ui/default/core/toggle-button/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/toggle-button/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "toggle-button-disabled": {
      name: "toggle-button-disabled",
      type: "registry:demo",
      registryDependencies: ["toggle-button"],
      files: ["registry/ui/default/core/toggle-button/demos/disabled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/toggle-button/demos/disabled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "toggle-button-shapes": {
      name: "toggle-button-shapes",
      type: "registry:demo",
      registryDependencies: ["toggle-button"],
      files: ["registry/ui/default/core/toggle-button/demos/shapes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/toggle-button/demos/shapes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "toggle-button-sizes": {
      name: "toggle-button-sizes",
      type: "registry:demo",
      registryDependencies: ["toggle-button"],
      files: ["registry/ui/default/core/toggle-button/demos/sizes.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/toggle-button/demos/sizes.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "toggle-button-uncontrolled": {
      name: "toggle-button-uncontrolled",
      type: "registry:demo",
      registryDependencies: ["toggle-button"],
      files: ["registry/ui/default/core/toggle-button/demos/uncontrolled.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/toggle-button/demos/uncontrolled.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "toggle-button-variants": {
      name: "toggle-button-variants",
      type: "registry:demo",
      registryDependencies: ["toggle-button"],
      files: ["registry/ui/default/core/toggle-button/demos/variants.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/toggle-button/demos/variants.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tooltip-arrow": {
      name: "tooltip-arrow",
      type: "registry:demo",
      registryDependencies: ["tooltip"],
      files: ["registry/ui/default/core/tooltip/demos/arrow.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tooltip/demos/arrow.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tooltip-composition": {
      name: "tooltip-composition",
      type: "registry:demo",
      registryDependencies: ["tooltip"],
      files: ["registry/ui/default/core/tooltip/demos/composition.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tooltip/demos/composition.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tooltip-container-padding": {
      name: "tooltip-container-padding",
      type: "registry:demo",
      registryDependencies: ["tooltip"],
      files: ["registry/ui/default/core/tooltip/demos/container-padding.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tooltip/demos/container-padding.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tooltip-default": {
      name: "tooltip-default",
      type: "registry:demo",
      registryDependencies: ["tooltip"],
      files: ["registry/ui/default/core/tooltip/demos/default.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tooltip/demos/default.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tooltip-delay": {
      name: "tooltip-delay",
      type: "registry:demo",
      registryDependencies: ["tooltip"],
      files: ["registry/ui/default/core/tooltip/demos/delay.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tooltip/demos/delay.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tooltip-flip": {
      name: "tooltip-flip",
      type: "registry:demo",
      registryDependencies: ["tooltip"],
      files: ["registry/ui/default/core/tooltip/demos/flip.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tooltip/demos/flip.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tooltip-offset": {
      name: "tooltip-offset",
      type: "registry:demo",
      registryDependencies: ["tooltip"],
      files: ["registry/ui/default/core/tooltip/demos/offset.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tooltip/demos/offset.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tooltip-placement": {
      name: "tooltip-placement",
      type: "registry:demo",
      registryDependencies: ["tooltip"],
      files: ["registry/ui/default/core/tooltip/demos/placement.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tooltip/demos/placement.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "tooltip-with-arrow": {
      name: "tooltip-with-arrow",
      type: "registry:demo",
      registryDependencies: ["tooltip"],
      files: ["registry/ui/default/core/tooltip/demos/with-arrow.tsx"],
      component: React.lazy(() => import("@/registry/ui/default/core/tooltip/demos/with-arrow.tsx")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "cn": {
      name: "cn",
      type: "registry:lib",
      registryDependencies: undefined,
      files: ["registry/ui/default/lib/cn.ts"],
      component: React.lazy(() => import("@/registry/ui/default/lib/cn.ts")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
    "styles": {
      name: "styles",
      type: "registry:lib",
      registryDependencies: undefined,
      files: ["registry/ui/default/lib/styles.ts"],
      component: React.lazy(() => import("@/registry/ui/default/lib/styles.ts")),
      source: "",
      category: "undefined",
      subcategory: "undefined",
      chunks: []
    },
  },
}
