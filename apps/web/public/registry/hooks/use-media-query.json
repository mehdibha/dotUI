{
  "name": "use-media-query",
  "type": "registry:hook",
  "files": [
    {
      "path": "hooks/use-media-query.ts",
      "content": "import * as React from \"react\";\n\nexport function useMediaQuery(query: string) {\n  const [value, setValue] = React.useState(false);\n\n  React.useEffect(() => {\n    function onChange(event: MediaQueryListEvent) {\n      setValue(event.matches);\n    }\n\n    const result = matchMedia(query);\n    result.addEventListener(\"change\", onChange);\n    setValue(result.matches);\n\n    return () => result.removeEventListener(\"change\", onChange);\n  }, [query]);\n\n  return value;\n}\n// import React from \"react\";\n\n// export function useMediaQuery(query: string): boolean {\n//   const subscribe = React.useCallback(\n//     (callback: (ev: MediaQueryListEvent) => void) => {\n//       const matchMedia = window.matchMedia(query);\n//       matchMedia.addEventListener(\"change\", callback);\n//       return () => {\n//         matchMedia.removeEventListener(\"change\", callback);\n//       };\n//     },\n//     [query]\n//   );\n\n//   const getSnapshot = () => {\n//     return window.matchMedia(query).matches;\n//   };\n\n//   const getServerSnapshot = () => {\n//     throw Error(\"useMediaQuery is a client-only hook\");\n//   };\n\n//   return React.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n// }\n",
      "type": "registry:hook",
      "target": ""
    }
  ]
}