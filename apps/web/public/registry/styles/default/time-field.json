{
  "name": "time-field",
  "type": "registry:core",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "field",
    "input",
    "date-input"
  ],
  "files": [
    {
      "path": "core/time-field/time-field.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  TimeField as AriaTimeField,\r\n  type TimeFieldProps as AriaTimeFieldProps,\r\n  type TimeValue,\r\n} from \"react-aria-components\";\r\nimport { tv, type VariantProps } from \"tailwind-variants\";\r\nimport { DateInput, DateSegment } from \"@/registry/ui/default/core/date-input\";\r\nimport { Field, type FieldProps } from \"@/registry/ui/default/core/field\";\r\nimport { InputRoot, type inputStyles } from \"@/registry/ui/default/core/input\";\r\n\r\nconst timeFieldStyles = tv({\r\n  slots: {\r\n    root: \"flex flex-col items-start gap-2\",\r\n  },\r\n});\r\n\r\ninterface TimeFieldProps<T extends TimeValue>\r\n  extends TimeFieldRootProps<T>,\r\n    Omit<FieldProps, \"children\">,\r\n    VariantProps<typeof inputStyles> {\r\n  prefix?: React.ReactNode;\r\n  suffix?: React.ReactNode;\r\n  isLoading?: boolean;\r\n  loaderPosition?: \"prefix\" | \"suffix\";\r\n}\r\n\r\nconst TimeField = <T extends TimeValue>({\r\n  className,\r\n  size,\r\n  label,\r\n  description,\r\n  errorMessage,\r\n  prefix,\r\n  suffix,\r\n  isLoading,\r\n  loaderPosition = \"suffix\",\r\n  isRequired,\r\n  isDisabled,\r\n  necessityIndicator,\r\n  contextualHelp,\r\n  ...props\r\n}: TimeFieldProps<T>) => {\r\n  return (\r\n    <TimeFieldRoot\r\n      className={className}\r\n      isRequired={isRequired}\r\n      isDisabled={isLoading || isDisabled}\r\n      {...props}\r\n    >\r\n      <Field\r\n        label={label}\r\n        description={description}\r\n        errorMessage={errorMessage}\r\n        isRequired={isRequired}\r\n        necessityIndicator={necessityIndicator}\r\n        contextualHelp={contextualHelp}\r\n      >\r\n        <InputRoot\r\n          size={size}\r\n          prefix={prefix}\r\n          suffix={suffix}\r\n          isLoading={isLoading}\r\n          loaderPosition={loaderPosition}\r\n        >\r\n          <DateInput>\r\n            {(segment) => <DateSegment segment={segment} />}\r\n          </DateInput>\r\n        </InputRoot>\r\n      </Field>\r\n    </TimeFieldRoot>\r\n  );\r\n};\r\n\r\ninterface TimeFieldRootProps<T extends TimeValue>\r\n  extends Omit<AriaTimeFieldProps<T>, \"className\"> {\r\n  className?: string;\r\n}\r\nconst TimeFieldRoot = <T extends TimeValue>({\r\n  className,\r\n  ...props\r\n}: TimeFieldRootProps<T>) => {\r\n  const { root } = timeFieldStyles();\r\n  return <AriaTimeField className={root({ className })} {...props} />;\r\n};\r\n\r\nexport type { TimeFieldProps, TimeFieldRootProps };\r\nexport { TimeField, TimeFieldRoot };\r\n",
      "type": "registry:core",
      "target": "core/time-field.tsx"
    }
  ]
}