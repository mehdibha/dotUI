{
  "name": "list-box",
  "type": "registry:core",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "text"
  ],
  "files": [
    {
      "path": "core/list-box/list-box.tsx",
      "content": "\"use client\";\r\n\r\nimport React from \"react\";\r\nimport {\r\n  composeRenderProps,\r\n  ListBox as AriaListBox,\r\n  ListBoxItem as AriaListBoxItem,\r\n  Collection as AriaCollection,\r\n  type ListBoxProps as AriaListBoxProps,\r\n  type ListBoxItemProps as AriaListBoxItemProps,\r\n  ListStateContext,\r\n} from \"react-aria-components\";\r\nimport { tv, type VariantProps } from \"tailwind-variants\";\r\nimport { CheckIcon, LoaderIcon } from \"@/lib/icons\";\r\nimport { focusRing } from \"@/lib/utils/styles\";\r\nimport { Text } from \"@/registry/ui/default/core/text\";\r\n\r\nconst listBoxStyles = tv({\r\n  base: [\r\n    focusRing(),\r\n    \"flex flex-col p-1 overflow-auto outline-none orientation-horizontal:flex-row orientation-horizontal:w-auto layout-grid:grid layout-grid:grid-cols-2 layout-grid:w-auto empty:justify-center empty:items-center empty:italic empty:min-h-24 empty:text-fg-muted empty:text-sm\",\r\n    \"[&_.separator]:-mx-1 [&_.separator]:my-1 [&_.separator]:w-auto\",\r\n  ],\r\n  variants: {\r\n    standalone: {\r\n      true: \"border bg-bg w-48 rounded-md max-h-60 overflow-y-auto\",\r\n      false: \"rounded-[inherit] max-h-[inherit]\",\r\n    },\r\n  },\r\n});\r\n\r\nconst listBoxItemStyles = tv({\r\n  base: [\r\n    \"flex cursor-pointer items-center rounded-sm px-3 py-1.5 text-sm outline-none transition-colors disabled:pointer-default hover:bg-bg-inverse/10 focus:bg-bg-inverse/10 pressed:bg-bg-inverse/15 disabled:text-fg-disabled disabled:cursor-default\",\r\n    \"selection-single:pl-0 selection-multiple:pl-0\",\r\n    \"[&_svg]:size-4\",\r\n  ],\r\n  variants: {\r\n    variant: {\r\n      default: \"text-fg\",\r\n      success: \"text-fg-success\",\r\n      warning: \"text-fg-warning\",\r\n      accent: \"text-fg-accent\",\r\n      danger: \"text-fg-danger\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n});\r\n\r\ninterface ListBoxProps<T> extends AriaListBoxProps<T> {\r\n  isLoading?: boolean;\r\n}\r\nconst ListBox = <T extends object>({\r\n  children,\r\n  isLoading,\r\n  ...props\r\n}: ListBoxProps<T>) => {\r\n  const state = React.useContext(ListStateContext);\r\n  const standalone = !state;\r\n  return (\r\n    <AriaListBox\r\n      {...props}\r\n      className={composeRenderProps(props.className, (className) =>\r\n        listBoxStyles({ standalone, className })\r\n      )}\r\n    >\r\n      <AriaCollection items={props.items}>{children}</AriaCollection>\r\n      {isLoading && (\r\n        <AriaListBoxItem className=\"flex items-center justify-center py-1.5\">\r\n          <LoaderIcon\r\n            aria-label=\"Loading more...\"\r\n            className=\"size-5 animate-spin text-fg-muted\"\r\n          />\r\n        </AriaListBoxItem>\r\n      )}\r\n    </AriaListBox>\r\n  );\r\n};\r\n\r\ninterface ItemProps<T>\r\n  extends AriaListBoxItemProps<T>,\r\n    VariantProps<typeof listBoxItemStyles> {\r\n  label?: string;\r\n  description?: string;\r\n  prefix?: React.ReactNode;\r\n  suffix?: React.ReactNode;\r\n}\r\nconst Item = <T extends object>({\r\n  variant,\r\n  label,\r\n  description,\r\n  prefix,\r\n  suffix,\r\n  ...props\r\n}: ItemProps<T>) => {\r\n  const textValue =\r\n    props.textValue ||\r\n    (typeof props.children === \"string\" ? props.children : undefined);\r\n  return (\r\n    <AriaListBoxItem\r\n      {...props}\r\n      textValue={textValue}\r\n      className={composeRenderProps(props.className, (className) =>\r\n        listBoxItemStyles({ variant, className })\r\n      )}\r\n    >\r\n      {composeRenderProps(\r\n        props.children,\r\n        (children, { isSelected, selectionMode }) => (\r\n          <>\r\n            {selectionMode !== \"none\" && (\r\n              <span className=\"flex w-8 shrink-0 items-center justify-center\">\r\n                {isSelected && (\r\n                  <CheckIcon aria-hidden className=\"size-4 text-fg-accent\" />\r\n                )}\r\n              </span>\r\n            )}\r\n            <span className=\"flex items-center gap-3\">\r\n              {prefix}\r\n              <span className=\"flex flex-1 flex-col\">\r\n                {label && <Text slot=\"label\">{label}</Text>}\r\n                {description && <Text slot=\"description\">{description}</Text>}\r\n                {children}\r\n              </span>\r\n              {suffix}\r\n            </span>\r\n          </>\r\n        )\r\n      )}\r\n    </AriaListBoxItem>\r\n  );\r\n};\r\n\r\nexport type { ListBoxProps, ItemProps };\r\nexport { ListBox, Item };\r\n",
      "type": "registry:core",
      "target": ""
    }
  ]
}