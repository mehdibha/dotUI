{
  "name": "checkbox-group",
  "type": "registry:core",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "checkbox"
  ],
  "files": [
    {
      "path": "core/checkbox-group/checkbox-group.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport {\n  CheckboxGroup as AriaCheckboxGroup,\n  composeRenderProps,\n  type CheckboxGroupProps as AriaCheckboxGroupProps,\n} from \"react-aria-components\";\nimport { tv, type VariantProps } from \"tailwind-variants\";\nimport { CheckboxContext } from \"@/registry/ui/default/core/checkbox\";\nimport { Field, type FieldProps } from \"@/registry/ui/default/core/field\";\n\nconst checkboxGroupStyles = tv({\n  slots: {\n    root: \"flex flex-col gap-2 items-start\",\n    wrapper: \"flex\",\n  },\n  variants: {\n    variant: {\n      default: {\n        wrapper: \"flex-col gap-0.5\",\n      },\n      card: {\n        wrapper: \"flex gap-2\",\n      },\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n});\n\ninterface CheckboxGroupProps\n  extends CheckboxGroupRootProps,\n    Omit<FieldProps, \"children\"> {}\nconst CheckboxGroup = React.forwardRef<\n  React.ElementRef<typeof AriaCheckboxGroup>,\n  CheckboxGroupProps\n>(\n  (\n    {\n      label,\n      description,\n      errorMessage,\n      necessityIndicator,\n      contextualHelp,\n      variant,\n      ...props\n    },\n    ref\n  ) => {\n    const { wrapper } = checkboxGroupStyles({ variant });\n    return (\n      <CheckboxGroupRoot ref={ref} variant={variant} {...props}>\n        {composeRenderProps(props.children, (children, { isRequired }) => (\n          <Field\n            label={label}\n            description={description}\n            errorMessage={errorMessage}\n            isRequired={isRequired}\n            necessityIndicator={necessityIndicator}\n            contextualHelp={contextualHelp}\n          >\n            <div className={wrapper()}>{children}</div>\n          </Field>\n        ))}\n      </CheckboxGroupRoot>\n    );\n  }\n);\nCheckboxGroup.displayName = \"CheckboxGroup\";\n\ninterface CheckboxGroupRootProps\n  extends Omit<AriaCheckboxGroupProps, \"className\">,\n    VariantProps<typeof checkboxGroupStyles> {\n  className?: string;\n}\nconst CheckboxGroupRoot = React.forwardRef<\n  React.ElementRef<typeof AriaCheckboxGroup>,\n  CheckboxGroupRootProps\n>(({ className, variant, ...props }, ref) => {\n  const { root } = checkboxGroupStyles({ variant });\n  return (\n    <CheckboxContext.Provider value={{ variant }}>\n      <AriaCheckboxGroup ref={ref} className={root({ className })} {...props} />\n    </CheckboxContext.Provider>\n  );\n});\nCheckboxGroupRoot.displayName = \"CheckboxGroupRoot\";\n\nexport type { CheckboxGroupProps, CheckboxGroupRootProps };\nexport { CheckboxGroup, CheckboxGroupRoot };\n",
      "type": "registry:core",
      "target": "core/checkbox-group.tsx"
    }
  ]
}