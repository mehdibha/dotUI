{
  "name": "number-field",
  "type": "registry:core",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "input",
    "field",
    "button"
  ],
  "files": [
    {
      "path": "core/number-field/number-field.tsx",
      "content": "\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport {\r\n  NumberField as AriaNumberField,\r\n  type NumberFieldProps as AriaNumberFieldProps,\r\n} from \"react-aria-components\";\r\nimport { tv, type VariantProps } from \"tailwind-variants\";\r\nimport { useMediaQuery } from \"@/lib/hooks/use-media-query\";\r\nimport {\r\n  ChevronDownIcon,\r\n  ChevronUpIcon,\r\n  MinusIcon,\r\n  PlusIcon,\r\n} from \"@/lib/icons\";\r\nimport { Button, type ButtonProps } from \"@/registry/ui/default/core/button\";\r\nimport { Field, type FieldProps } from \"@/registry/ui/default/core/field\";\r\nimport {\r\n  InputRoot,\r\n  Input,\r\n  type inputStyles,\r\n} from \"@/registry/ui/default/core/input\";\r\n\r\nconst numberFieldStyles = tv({\r\n  base: \"flex flex-col gap-2 items-start w-48\",\r\n});\r\n\r\ntype NumberFieldProps = NumberFieldRootProps &\r\n  Omit<FieldProps, \"children\"> &\r\n  VariantProps<typeof inputStyles> & {\r\n    placeholder?: string;\r\n  };\r\nconst NumberField = React.forwardRef<HTMLInputElement, NumberFieldProps>(\r\n  (\r\n    {\r\n      className,\r\n      size,\r\n      placeholder,\r\n      label,\r\n      description,\r\n      errorMessage,\r\n      isRequired,\r\n      necessityIndicator,\r\n      contextualHelp,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const isMobile = useMediaQuery(\"(max-width: 768px)\");\r\n    const prefix = isMobile ? (\r\n      <NumberFieldButton\r\n        slot=\"decrement\"\r\n        className=\"h-full rounded-none rounded-l-md border-r\"\r\n      />\r\n    ) : null;\r\n    const suffix = isMobile ? (\r\n      <NumberFieldButton\r\n        slot=\"increment\"\r\n        className=\"h-full rounded-none rounded-r-md border-l\"\r\n      />\r\n    ) : (\r\n      <div className=\"flex h-full flex-col rounded-r-md\">\r\n        <NumberFieldButton\r\n          slot=\"increment\"\r\n          iconType=\"chevron\"\r\n          className=\"h-auto flex-1 shrink rounded-none rounded-tr-md border-b border-l\"\r\n        />\r\n        <NumberFieldButton\r\n          slot=\"decrement\"\r\n          iconType=\"chevron\"\r\n          className=\"h-auto flex-1 shrink rounded-none rounded-br-md border-l\"\r\n        />\r\n      </div>\r\n    );\r\n    return (\r\n      <NumberFieldRoot className={className} {...props}>\r\n        <Field\r\n          label={label}\r\n          description={description}\r\n          errorMessage={errorMessage}\r\n          isRequired={isRequired}\r\n          necessityIndicator={necessityIndicator}\r\n          contextualHelp={contextualHelp}\r\n        >\r\n          <InputRoot\r\n            size={size}\r\n            className=\"px-0 [&_button]:invalid:border-border-danger [&_button]:focus-within:invalid:border-border\"\r\n          >\r\n            {prefix}\r\n            <Input ref={ref} placeholder={placeholder} className=\"px-2\" />\r\n            {suffix}\r\n          </InputRoot>\r\n        </Field>\r\n      </NumberFieldRoot>\r\n    );\r\n  }\r\n);\r\nNumberField.displayName = \"NumberField\";\r\n\r\ntype NumberFieldRootProps = Omit<AriaNumberFieldProps, \"className\"> & {\r\n  className?: string;\r\n};\r\nconst NumberFieldRoot = React.forwardRef<\r\n  React.ElementRef<typeof AriaNumberField>,\r\n  NumberFieldRootProps\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <AriaNumberField\r\n      ref={ref}\r\n      className={numberFieldStyles({ className })}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\nNumberFieldRoot.displayName = \"NumberFieldRoot\";\r\n\r\ninterface NumberFieldButtonProps extends ButtonProps {\r\n  slot: \"increment\" | \"decrement\";\r\n  iconType?: \"chevron\" | \"default\";\r\n}\r\nconst NumberFieldButton = ({\r\n  slot,\r\n  iconType = \"default\",\r\n  ...props\r\n}: NumberFieldButtonProps) => {\r\n  const icon =\r\n    iconType === \"chevron\" ? (\r\n      slot === \"increment\" ? (\r\n        <ChevronUpIcon />\r\n      ) : (\r\n        <ChevronDownIcon />\r\n      )\r\n    ) : slot === \"increment\" ? (\r\n      <PlusIcon />\r\n    ) : (\r\n      <MinusIcon />\r\n    );\r\n  return (\r\n    <Button slot={slot} size=\"sm\" variant=\"quiet\" shape=\"square\" {...props}>\r\n      {icon}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport type { NumberFieldProps, NumberFieldRootProps };\r\nexport { NumberField, NumberFieldRoot, NumberFieldButton };\r\n",
      "type": "registry:core",
      "target": ""
    }
  ]
}