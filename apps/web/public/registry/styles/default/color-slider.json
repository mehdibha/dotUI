{
  "name": "color-slider",
  "type": "registry:core",
  "dependencies": [
    "react-aria-components"
  ],
  "registryDependencies": [
    "color-thumb",
    "field"
  ],
  "files": [
    {
      "path": "core/color-slider/color-slider.tsx",
      "content": "\"use client\";\r\n\r\nimport {\r\n  composeRenderProps,\r\n  ColorSlider as AriaColorSlider,\r\n  SliderOutput as AriaSliderOutput,\r\n  SliderTrack as AriaSliderTrack,\r\n  type ColorSliderProps as AriaColorSliderProps,\r\n  type SliderOutputProps as AriaSliderOutputProps,\r\n  type SliderTrackProps as AriaSliderTrackProps,\r\n} from \"react-aria-components\";\r\nimport { tv } from \"tailwind-variants\";\r\nimport { ColorThumb } from \"@/registry/ui/default/core/color-thumb\";\r\nimport { Label } from \"@/registry/ui/default/core/field\";\r\nimport { cn } from \"@/registry/ui/default/lib/cn\";\r\n\r\nconst colorSliderStyles = tv({\r\n  slots: {\r\n    root: \"group/color-slider flex flex-col gap-2 orientation-horizontal:w-48 orientation-vertical:h-48 orientation-vertical:items-center\",\r\n    output: \"text-fg-muted text-sm\",\r\n    track: [\r\n      \"orientation-horizontal:w-48 rounded-md orientation-horizontal:h-6 orientation-vertical:w-6 orientation-vertical:h-48 disabled:!bg-bg-disabled\",\r\n      \"relative before:absolute before:inset-0 before:z-[-1] before:bg-[repeating-conic-gradient(#e6e6e6_0%_25%,_#fff_0%_50%)] before:bg-[length:16px_16px] before:bg-center before:content-[''] before:rounded-[inherit]\",\r\n    ],\r\n  },\r\n});\r\n\r\ninterface ColorSliderProps extends ColorSliderRootProps {\r\n  showValueLabel?: boolean;\r\n  label?: string;\r\n}\r\nconst ColorSlider = ({\r\n  label,\r\n  channel,\r\n  showValueLabel = true,\r\n  ...props\r\n}: ColorSliderProps) => {\r\n  return (\r\n    <ColorSliderRoot channel={channel} {...props}>\r\n      {(label || showValueLabel) && (\r\n        <div\r\n          className={cn(\r\n            \"flex items-center justify-between gap-2\",\r\n            !label && \"justify-end\"\r\n          )}\r\n        >\r\n          {label && <Label>{label}</Label>}\r\n          {showValueLabel && <ColorSliderOutput />}\r\n        </div>\r\n      )}\r\n      <ColorSliderTrack>\r\n        <ColorThumb />\r\n      </ColorSliderTrack>\r\n    </ColorSliderRoot>\r\n  );\r\n};\r\n\r\ntype ColorSliderRootProps = AriaColorSliderProps;\r\nconst ColorSliderRoot = (props: ColorSliderRootProps) => {\r\n  const { root } = colorSliderStyles();\r\n  return (\r\n    <AriaColorSlider\r\n      {...props}\r\n      className={composeRenderProps(props.className, (className) =>\r\n        root({ className })\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\ntype ColorSliderTrackProps = AriaSliderTrackProps;\r\nconst ColorSliderTrack = (props: ColorSliderTrackProps) => {\r\n  const { track } = colorSliderStyles();\r\n  return (\r\n    <AriaSliderTrack\r\n      {...props}\r\n      style={composeRenderProps(props.style, (style, { isDisabled }) => ({\r\n        ...style,\r\n        ...(isDisabled ? { background: \"none\" } : {}),\r\n      }))}\r\n      className={composeRenderProps(props.className, (className) =>\r\n        track({ className })\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\ntype ColorSliderOutputProps = AriaSliderOutputProps;\r\nconst ColorSliderOutput = (props: ColorSliderOutputProps) => {\r\n  const { output } = colorSliderStyles();\r\n  return (\r\n    <AriaSliderOutput\r\n      {...props}\r\n      className={composeRenderProps(props.className, (className) =>\r\n        output({ className })\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport type {\r\n  ColorSliderProps,\r\n  ColorSliderRootProps,\r\n  ColorSliderTrackProps,\r\n  ColorSliderOutputProps,\r\n};\r\nexport {\r\n  ColorSlider,\r\n  ColorSliderRoot,\r\n  ColorSliderOutput,\r\n  ColorSliderTrack,\r\n  colorSliderStyles,\r\n};\r\n",
      "type": "registry:core",
      "target": ""
    }
  ]
}